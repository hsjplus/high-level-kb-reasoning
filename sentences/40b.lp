% Mary scrubbed the tile floor but thankfully didn't need to clean the toilet, because the [thing] was clean.
% In ASP, "not" has a special function, so after the parsing, we changed "not" into "nt".

has_s(need_10,negative,not_9).
has_s(thing_18,trait,clean_20).
has_s(need_10,supporting_verb,did_8).
has_s(scrubbed_2,recipient,floor_5).
has_s(clean_12,agent,mary_1).
has_s(scrubbed_2,agent,mary_1).
has_s(need_10,objective,clean_12).
has_s(floor_5,complement_word,tile_4).
has_s(need_10,modifier,thankfully_7).
has_s(need_10,agent,mary_1).
has_s(clean_12,recipient,toilet_14).
has_s(was_19,agent,thing_18).
has_s(toilet_14,instance_of,toilet).
has_s(toilet,is_subclass_of,artifact).
has_s(thankfully_7,instance_of,thankfully).
has_s(thankfully,is_subclass_of,all).
has_s(was_19,instance_of,be).
has_s(be,is_subclass_of,stative).
has_s(scrubbed_2,instance_of,scrub).
has_s(scrub,is_subclass_of,contact).
has_s(did_8,instance_of,do).
has_s(do,is_subclass_of,social).
has_s(clean_20,instance_of,clean).
has_s(clean,is_subclass_of,quality_descriptive).
has_s(thing_18,instance_of,thing).
has_s(thing,is_subclass_of,artifact).
has_s(floor_5,instance_of,floor).
has_s(floor,is_subclass_of,artifact).
has_s(need_10,instance_of,need).
has_s(need,is_subclass_of,stative).
has_s(mary_1,instance_of,mary).
has_s(mary,is_subclass_of,person).
has_s(tile_4,instance_of,tile).
has_s(tile,is_subclass_of,artifact).
has_s(not_9,instance_of,nt).
has_s(nt,is_subclass_of,all).
has_s(clean_12,instance_of,clean).
has_s(clean,is_subclass_of,contact).
has_s(scrubbed_2,caused_by,was_19).
has_s(did_8,caused_by,was_19).
has_s(need_10,caused_by,was_19).
has_s(clean_12,caused_by,was_19).
has_s(floor_5,semantic_role,was_dirty).
has_s(mary_1,semantic_role,cleaner).
has_s(mary_1,semantic_role,cleaner).
has_s(mary_1,semantic_role,needer).
has_s(toilet_14,semantic_role,thing_cleaned).

pronoun(thing_18).
ans_ch1(floor_5).
ans_ch2(toilet_14).
